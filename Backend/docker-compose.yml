version: '3'

services:
  app:
    container_name: backend
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py migrate &&
             python3 manage.py wait_for_db &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db

  db:
    container_name: database
    image: postgres:10-alpine
    env_file:
      - ./.env.dev
    volumes: 
      - ./pgdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:alpine

  celery:
    container_name: celery
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app
  
  # web server
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:3000
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    restart: on-failure